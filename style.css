/* ==================== GERAL ==================== */
* {
  margin: 0; /*quando vc coloca somente margin=0 vc usa o atalho (shorthand). Significa que vai aplicar para top, left, right e botton*/
  padding: 0;
  box-sizing: border-box; /*faz com que a caixa seja contada a partir da borda*/
}

:root {
  /*root aplica para todo o documento. Está em 16 pixels padrão mas mexendo para rem aplica com acessibilidade*/
  font-size: 62, 5%; /* (10*100)/16=62,5% - aqui é regra de 3*/
  /*1rem = 10px*/
  --hue: 190; /*Vai trocar a 170 pela variável --hue*/
  --primary-color: hsl(var(--hue),100%,26%); /*Variáveis no CSS - Copia do figma em inspect e altera para hsla. 1 heal = matiz de cor, 2 saturation, 3 lumiance, 4 alpha (transparencia de 0 a 1)*/
  --headline: hsl(210, 11%, 15%);
  --paragraph: hsl(210, 9%, 31%);
  --brand-beige: hsl(39, 100%, 97%);
  --brand-light: hsl(calc(var(--hue) - 22), 23%, 89%); /*Como a hue era 170 e aqui era 148 ele deixa esse cálculo para fazer automáticamente a variação de cor de todo o site*/
  --brand-light-2: hsl(calc(var(--hue) + 10), 14%, 97%);
  --brand-dark: hsl(var(--hue), 100%, 14%);
  --bg-light: hsl(180, 14%, 97%);
  --nav-height: 7.2rem;
}

html {
  scroll-behavior: smooth; /*Faz deslizar nos itens da página suavimente quando clica. Nem todo chrome vem habilitado. Habilitar em chrome://flags/#smooth-scrolling.*/
}

html,
body {
  width: 100%;
  height: 100%;
}

body {
  font-family: 'DM Sans';
  font-size: 1.6rem; /*significa 16px*/
  text-align: center;
  overflow: overlay;

  background-color: var(--bg-light);
}

.wrapper {
  width: min(50rem, 100%);
  margin-right: auto;
  margin-left: auto;
  padding-inline: 2.4rem;
}

ul {
  list-style: none; /*remove as bolinhas das listas*/
}

img {
  max-width: 100%;
}

section {
  padding-block: 10rem;
}

section header h4 {

  font-size: 1.4rem; /*significa 14px*/
  /*definir 14px significa definir uma unidade fixa, o que causa problemas de acessibilidade para deficientes*/
  font-weight: 700;
  line-height: 150%;
  letter-spacing: 0.08rem;
  color: var(--primary-color); /*Chamando a variável*/
  text-transform: uppercase;
  margin-bottom: 1.6rem;
}

section header h2 {
  font-size: 3rem;
  line-height: 3.9rem;
  color: var(--headline);
}



section header h1 {
  font-size: 3.4rem;
  color: var(--headline);
  line-height: 130%;
  margin-bottom: 2.4rem;
}

section .content p {
  font-weight: 400;
  font-size: 1.6rem;
  line-height: 150%;
  color: var(--paragraph);
}

.button {
  background: var(--primary-color);
  border: none;
  border-radius: 4rem;
  margin-bottom: 6rem;
  padding: 1.6rem 3.2rem; /*O padding quando tem 2 valores, o primeiro se refere a top e bot e o segundo a left e right*/
  width: fit-content; /*para a largura do botão ficar adaptada ao conteúdo*/
  color: white;
  text-transform: uppercase;
  font-size: 1.4rem;
  font-weight: 700;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 1.6rem;
  text-decoration: none;
  transition: background .5s; /*ou 500ms*/
}

.button:hover {
  background-color: var(--brand-dark);
}

.social-links {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 3.2rem;
}

/* ==================== NAVIGATION ==================== */

nav {
  display: flex;
  height: var(--nav-height);

  padding: 1.6rem 2.4rem; /*Primeira parte serve para as auturas e a segunda para laterais (Shorthand - atalho)*/

  position: fixed;
  top: 0;
  width: 100vw;

  /*left: 50%;
  transform: translateX(-50%); /*trás metade do logo para ele ficar centralizado, depois ele alterou e deletou
  */
  z-index: 100;
}

nav .wrapper {
  display: flex;
  align-items: center;
  justify-content: space-between; /*Joga o logo para o canto esquerdo e o menu para o direito*/
}

nav.scroll {
  background: var(--primary-color);
}

/*Com as custom Colors não precisa mais disso*/
/*nav.scroll /*svg:nth-child(1)/* .logo path {
  /*Cada svg do logo é uma letra do DoctorCare. Esse nth-child é uma pseudoclass que faz com que aplique para o primeiro svg
  fill: white;
}*/

/*Com as custom Colors não precisa mais disso*/
/*nav.scroll button path {
  /*esse svg 2 é o menuzinho
  stroke: white;
}
*/
nav button {
  /*deixa o botão de menu bonito, pois estava esquisito*/
  background: none;
  border: none;
  cursor: pointer;
}

nav .menu,
nav .close-menu{
  position: fixed;
}

/* ==================== #HOME ==================== */

#home {
  padding-block: 0;
  padding-top: calc(4.1rem + var(--nav-height));
  /*propriedades do pai (body) se estendem a todos os filhos, exceto quando se refere a propriedades da caixa. São elas margin, padding, border, width, height*/
}

#home::before {
  /*fazer uma tag html no css (para pintar a caixa verde atrás da mulher). Poderia fazer direto no html, mas ele ensina essa forma também*/
  content: '';
  width: 100%; /*Unidade de medida para ficar sempre do tamanho da tela (100vw - Viewport Width). Depois ele mudou para porcentagem para sumir a barrinha*/
  height: calc(70% + var(--nav-height));
  background-color: var(--brand-light);
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1; /*Faz a caixa colorida ficar no eixo Z atrás das palavras. O padrão é eixo 0*/
}

#home .button {
  margin-inline: auto;
}

#home p {
  font-size: 1.8rem;
  line-height: 150%;
  color: var(--paragraph);
  margin-bottom: 3.2rem;
}

#home img {
  width: 26.4rem;
  display: block;
  margin-inline: auto;
  object-position: 0 2rem;
}

#home .stats {
  width: 100%;
  padding-block: 4 rem;
  margin-inline: auto; /*ao invés de colocar margin right e left, pode fazer assim. Inline significa eixo X*/
  background-color: var(--brand-beige);
  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;
  display: flex;
  flex-direction: column; /*alinha o flex de linha para coluna*/
  justify-content: center; /*justifica no centro da coluna flex*/
  gap: 6rem; /*Separação de 60 entre os números das estatísticas*/
}

#home .stat h3 {
  font-size: 4.8rem;
  color: var(--headline);
  line-height: 130%;
  margin-bottom: 0.4rem;
}

#home .stat p {
  margin: 0;
  color: var(--primary-color);
  font-size: 1.6rem;
  line-height: 150%;
}



/* ==================== MENU-EXPANDED ==================== */
body.menu-expanded {
  overflow: hidden; /*retira as barrinhas de rolagem do navegador*/
}

body.menu-expanded > :not(nav) {
  /*esconde todos os itens do menu expanded, exceto o nav (pseudo-class)*/
  visibility: hidden;
}

.menu,
.close-menu,
body.menu-expanded .open-menu {
  opacity: 0;
  visibility: hidden;
}

body.menu-expanded .menu,
body.menu-expanded .close-menu {
  opacity: 1;
  visibility: visible;
}

.menu {
  transform: translateY(100%);
}

body.menu-expanded .menu {
  top: 0;
  left: 0;
  background: var(--primary-color);

  width: 100vw;
  height: 100vh;

  padding-top: var(--nav-height);
  transition: transform 400ms;
  transform: translateY(0);

}
/*
body.menu-expanded nav {
  position: relative; tira o posicionamento fixo do nosso nav. Junta o menu expanded para o canto superior esquerdo máximo. Ele tirou depois
  
}
*/

.menu ul:nth-child(1) {
  /*aplica isso para o primeiro filho ul*/
  display: flex;
  flex-direction: column;
  gap: 4.8rem;

  margin-top: 6rem;

  font-weight: 700;
  font-size: 2.4rem;
  line-height: 3.1rem;
}

.menu ul li a {
  color: white;
  text-decoration: none;
}

.menu .button {
  background: #ffffff;
  border-radius: 4rem;
  font-weight: 700;
  font-size: 1.8rem;
  line-height: 2.3rem;
  text-transform: uppercase;
  text-decoration: none;

  color: var(--primary-color);

  display: inline-block;
  padding: 16px 32px;

  margin-top: 4.8rem;
  margin-bottom: 8rem;
}

.menu .button:hover {
  background-color: var(--primary-color);
  color: white;
  filter: brightness(1.1);
}


body.menu-expanded .logo,
body.menu-expanded button {
  position: relative;
  z-index: 100;
}

body.menu-expanded .logo path {
  fill: white;
}

body.menu-expanded button path {
  stroke: white;
}

/* ==================== SERVICES ==================== */

/*
#services header h4 {
  //Se estiver referendando um Id, coloca a hash mais o nome. Passando o mouse em cima a especificidade dele é 1.0.0, ou seja super específico
  font-size: 1.4rem;
  line-height: 150%;
  letter-spacing: 0.08rem;
  color: var(--primary-color);
  text-transform: uppercase;
  margin-bottom: 1.6rem;
}
*/

#services header h2 {
  margin-bottom: 6rem;
}

#services .cards {
  display: flex; /*Coloca os cards um ao lado do outro*/
  flex-direction: column; /*Volta os cards para coluna. Mas para que fazer isso sendo que já tava certo? Pois destrava a opção gap*/
  gap: 3.2rem
}

#services .card {
  padding: 2.4rem;
  text-align: left;
  background: white;
  border: 1px solid var(--brand-light);
  border-radius: 0.6rem;
}

#services .card h3 {
  margin-block: 1.6rem; /*O margin block define a margem top e botton*/
}




/* ==================== ABOUT ==================== */

#about {
  text-align: left;
  background-color: var(--brand-beige);
}

#about header h2 {
  margin-bottom: 2.4rem;
}

#about .content p {
  margin-top: 2.4rem;
  margin-bottom: 6rem;

}

/* ==================== CONTACT ==================== */
#contact {
  text-align: left;
}

#contact header {
  margin-bottom: 3.2rem;
}

#contact ul {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;

  margin-bottom: 3.2rem;
}

#contact ul li {
  display: flex;
  align-items: center;
  gap: .8rem;
}

/* ==================== FOOTER ==================== */
footer {
  background-color: var(--primary-color);
  padding-block: 6rem;

  text-align: center;
  color: white;
}

footer .logo {
  display: inline-block;
  margin-bottom: 2.4rem;
}

footer .logo svg {
  width: 23.6rem;
  height: 3.1rem;
}

footer .logo path {
  fill: white;
}

footer p {
  color: var(--brand-beige);
  line-height: 2;
  margin-bottom: 3.2rem;
}

footer .social-links {
  justify-content: flex-center;
}

/*Custom Colors*/

#services .card circle {
  fill: var(--brand-light);
}

#navigation .logo path[fill*='#00856F'], /*procura o path que contenha o fill com essa cor (cores da palavra Care do logo)*/
#backToTopButton circle {
  fill: var(--primary-color);
}

button.open-menu path[stroke*='#00856F'],
#contact li path {
  stroke: var(--primary-color);
}

body.menu-expanded #navigation .logo path,
#navigation.scroll .logo path{
  fill: white;
}

#navigation.scroll button.open-menu path[stroke*='#00856F']{
  stroke: white;
}


/* ==================== BACK TO TOP BUTTON ==================== */
#backToTopButton {
position: fixed; /*essa propriedade libera o botton e o right*/
bottom: 1rem;
right: 2.5rem;

opacity: 0;
visibility: hidden;

transform: translateY(100%);
transition: 200ms;
}

#backToTopButton.show {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

/* ==================== RESPONSIVO ==================== */


@media (min-width: 1024px) {

/* ==================== GERAL 2 ==================== */

  body {
    overflow: auto;
  }


  .wrapper {
    width: min(112rem, 100%);
    display: grid;
  }

  .col-a {
    grid-area: A; /*Sem aspas mesmo, mas não disse o motivo*/
  }

  .col-b {
    grid-area: B;
  }


  section {
    padding-block: 16rem;
  }

  section header h2 {
    font-size: 4rem;
    line-height: 5.2rem;
  }

/* ==================== NAVIGATION 2 ==================== */

/*RESET - indica que todos os elementos dentro do wrapper de navigation serão resetados*/
  nav#navigation .wrapper * {

    margin: 0;
    padding: 0;
    visibility: initial; /*pega os valores iniciais antes de colocar o CSS (pode olhar no devtools para lembrar de todos)*/
    display: initial;
    opacity: initial;
    flex-direction: initial;
    position: initial;
    font-size: initial;
    font-weight: initial;
    transform: initial;
    color: initial;
    background-color: initial;
    filter: initial;
  }

  /*retira os dois ícones de menu que usam somente no mobile*/
  nav#navigation .close-menu,
  nav#navigation .open-menu,
  nav#navigation .social-links {
    display: none;
  }
  
  nav#navigation .menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 60%; /*aumentou o tamanho da caixa que contem inicio até agende sua consulta*/
  }

  nav#navigation .menu ul:nth-child(1) { /*o nth child 1 se refere ao inicio-serviços-sobre*/
    display: flex;
    gap: 3.2rem;
  }

  nav#navigation .menu ul li a {

    color: var(--primary-color);
    opacity: 0.7;
  }
  nav#navigation .menu a.button {

    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 2.4rem;

    border: 1px solid var(--primary-color);
    border-radius: 4rem;

    color:  var(--primary-color);

    font-weight: 700;
    font-size: 1.4rem;
    line-height: 1.8rem;
    text-transform: uppercase;
  }

  nav#navigation .menu a.button:hover {
    background-color: var(--primary-color);
    border: none;
    color: white;
  }

  nav#navigation.scroll .menu ul li a {
    color: var(--brand-light-2);
    opacity: 0.6;
  }

  nav#navigation.scroll .menu a.button {
    border-color: white;
    color: white;
  }

    nav#navigation .menu li a {
      transition: opacity .4s;
  }

    nav#navigation .menu li a:hover {
    opacity: 1;
    font-weight: 700;
  }

  nav#navigation .menu li a::after {
    content: '';
    width: 0%;
    height: 2px;
    background-color: var(--primary-color);
    
    position: relative; /*essa propriedade desbloqueia a propriedade abaixo botton*/
    bottom: -2rem;
    left: -0.5rem;

    display: block;

    transition: width 0.2s;

  }

  nav#navigation.scroll .menu li a::after {
    background-color: white;
  }
  nav#navigation .menu li a:hover::after { /*quando nav tiver o Id Navigation, procura uma classe menu dentro dele. Depois procura todo o li que existe em menu e depois todo a que existe em li. Depois quando a estiver em seu estado hover pega o elemento after e faz alguma coisa*/
    padding-inline: 0.8rem;
    width: 100%;
  }

  nav#navigation.scroll .menu li a:hover {
    opacity: 1;
  }

  nav#navigation.scroll .menu a.button:hover {
    background-color: var(--primary-color);
    filter: brightness(1.2);
    border: none;
  }


  /* ==================== HOME ==================== */

  #home::before {
    height: calc(110% - var(--nav-height));
  }

  #home {
    padding-top: var(--nav-height);
  }

  #home .wrapper {
    grid-template-columns: 60.5rem 1fr; /*Divide o grid em 3 fraçoes 1fr 1fr 1fr (seria talves o 33.3% da dankicode???). Depois deixou o primeiro grid em 60.5 rem e o segundo flexível*/
    grid-template-areas:
    'A B'
    'C C';
  }

  #home .col-a {
    text-align: left;
    align-self: center; /*alinha o grid a no centro*/
  }



  #home h1 {
    font-size:  5.2rem;
  }

  #home .content p {
    font-size: 1.8rem;
  }

  #home .stats {
    grid-area: C;

    flex-direction: row;
    padding: 6rem;
    gap: 0; /*anteriormente tinha deixado algum gap e zerando aqui as caixinhas do stats ficam do mesmo tamanho*/
  }

  #home .stats .stat + .stat { /*procura um stat que anterior a ele tenha um stat, ou seja o +15 especialistas e o +10 anos no mercado e coloca uma borda entre eles*/
    border-left: 1px solid var(--primary-color);
  }

  #home .stats .stat {
    flex: 1; /*faz com que cada caixa do stats fique com a mesma largura*/
  }

  #home .button {
    margin: 0;
  }
  
  #home img {
    width: 42rem;
  }



  /* ==================== SERVICES ==================== */

  #services h2 {
    width: 47rem;
    margin-inline: auto;
    }

  #services .cards {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 4rem;
  }

  #services .card {
    width: 30%;
    flex-grow: 1; /*preencha o expaço e cresça conforme necessário*/
  } 


  /* ==================== ABOUT ==================== */

  #about .wrapper {
    grid-template-columns: 48rem 1fr;
    grid-template-areas: 'B A';
    gap: 6.7rem;
  }

  #about .col-a {
    align-self: center;
  }


  #about .content p {
    margin-bottom: 0;
  }

    /* ==================== CONTACT ==================== */

    #contact .wrapper {
    grid-template-columns: 1fr 57.5rem;
    grid-template-areas: 'A B';
  }

  #contact h2 {
    width: 40.4rem;
  }

    /* ==================== FOOTER (o footer está todo zuado, mas sem saco para ver isso agora )==================== */

  footer {
    padding-block: 8rem;
  }


  footer .wrapper {
    grid-template-columns: 1fr 1fr;
    grid-template-areas: 'A B';
  }

  footer .col-a {
    align-self: center;
  }

  footer .col-b {
    align-self: center;
    justify-self: end;
  }


  footer p {
    margin-bottom: 0;

  }






}





